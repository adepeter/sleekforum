# Generated by Django 3.0.5 on 2020-04-04 18:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0003_auto_20200404_1934'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, unique=True, verbose_name='title')),
                ('pin', models.IntegerField(choices=[(0, 'Do not pin thread'), (1, 'Pin thread within category'), (2, 'Pin thread globally')], default=0, verbose_name='pin thread')),
                ('prefix', models.IntegerField(choices=[(0, 'Default'), (1, 'Help'), (2, 'Discussion'), (3, 'Info')], default=0, verbose_name='prefix')),
                ('slug', models.SlugField(blank=True, editable=False, verbose_name='slug')),
                ('content', models.TextField(unique_for_date='created', verbose_name='content')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_locked', models.BooleanField(default=False, verbose_name='lock thread')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='hide thread')),
                ('is_editable', models.BooleanField(default=True, verbose_name='allow edit')),
                ('shares', models.PositiveIntegerField(default=0, verbose_name='total shares')),
                ('total_likes', models.PositiveIntegerField(default=0, verbose_name='total likes')),
                ('views', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='categories.Category')),
                ('starter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-modified'],
            },
        ),
        migrations.CreateModel(
            name='ThreadView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_views', to='threads.Thread')),
                ('user', models.ForeignKey(default='unknown', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='thread_views', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThreadSubscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_subscribers', to='threads.Thread')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribed_threads', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThreadRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('show_rule', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThreadReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('reported_by', models.ManyToManyField(related_name='thread_reports', to=settings.AUTH_USER_MODEL)),
                ('rules_broken', models.ManyToManyField(related_name='thread_reports', to='threads.ThreadRule')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_reports', to='threads.Thread')),
            ],
        ),
        migrations.CreateModel(
            name='ThreadParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_owner', models.BooleanField(default=False)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='threads.Thread')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThreadLikeDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField(choices=[(1, 'Like'), (-1, 'Dislike')])),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_dislikes', to='threads.Thread')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_dislikes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Thread like and dislike',
                'verbose_name_plural': 'Thread likes and dislikes',
            },
        ),
        migrations.CreateModel(
            name='ThreadEdit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor_name', models.CharField(max_length=255)),
                ('editor_slug', models.SlugField()),
                ('edits', models.PositiveSmallIntegerField(default=0)),
                ('last_edit_on', models.DateTimeField(auto_now_add=True)),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_edits', to=settings.AUTH_USER_MODEL)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_edits', to='threads.Thread')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Post content')),
                ('is_hidden', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='threads.Post')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='threads.Thread')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='threadview',
            constraint=models.UniqueConstraint(fields=('thread', 'user'), name='unique_together_thread_user'),
        ),
        migrations.AddConstraint(
            model_name='threadlikedislike',
            constraint=models.UniqueConstraint(fields=('thread', 'user'), name='unique_thread_user'),
        ),
        migrations.AddIndex(
            model_name='thread',
            index=models.Index(fields=['id', 'slug'], name='threads_thr_id_1505ab_idx'),
        ),
    ]
