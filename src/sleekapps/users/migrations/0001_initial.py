# Generated by Django 3.1.1 on 2020-09-13 11:46

import django.contrib.postgres.fields
from django.db import migrations, models
import django.utils.timezone
import sleekapps.cores.validators
import sleekapps.users.managers.user
import sleekapps.users.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='e-mail')),
                ('username', models.CharField(db_index=True, max_length=25, unique=True, verbose_name='username')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=sleekapps.users.utils.ImageHandler.upload_to, validators=[sleekapps.cores.validators.validate_image_filesize])),
                ('firstname', models.CharField(blank=True, max_length=20)),
                ('middlename', models.CharField(blank=True, max_length=20)),
                ('lastname', models.CharField(blank=True, max_length=20)),
                ('sex', models.CharField(blank=True, choices=[('female', 'Female'), ('male', 'Male')], max_length=6)),
                ('dob', models.DateField(blank=True, help_text='Birth date in yyyy-mm-dd format', null=True, verbose_name='Date of Birth')),
                ('about', models.TextField(blank=True, help_text='A description about you. Max: 500 chars', max_length=500, verbose_name='About me')),
                ('hobbies', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Hobbies separated by comma', null=True, size=None, verbose_name='Hobbies')),
                ('phone_number', models.CharField(blank=True, help_text='Phone number can start with + but no space', max_length=15, verbose_name='Phone number')),
                ('address', models.CharField(blank=True, max_length=50, verbose_name='Address')),
                ('state', models.CharField(blank=True, max_length=20, verbose_name='State')),
                ('country', models.CharField(blank=True, max_length=20)),
                ('signature', models.TextField(blank=True, help_text='A short brief of you that will show in forum')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is superuser')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date and time of registration', verbose_name='Registration date')),
                ('last_modified', models.DateTimeField(auto_now=True, help_text='Date and time of profile last modification', verbose_name='Last modified')),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time user was last active', verbose_name='Last time seen')),
                ('whatsapp', models.CharField(blank=True, help_text='Whatsapp ID with +country_code', max_length=20, verbose_name='Whatsapp ID')),
                ('website', models.URLField(blank=True, default='https://sleekforum.com', help_text='URL of your website, blog or portfolio', verbose_name='Website')),
                ('repo', models.URLField(blank=True, default='https://github.com/', help_text='URL to GitHub or Bitbucket', verbose_name='Repo URL')),
                ('facebook', models.URLField(blank=True, default='https://facebook.com/', help_text='Facebook Profile URL', verbose_name='Facebook URL')),
                ('twitter', models.URLField(blank=True, default='https://twitter.com/@', help_text='Twitter URL', verbose_name='Twitter URL')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP Address', null=True, verbose_name='IP Address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['email', 'username'],
            },
            managers=[
                ('objects', sleekapps.users.managers.user.UserManager()),
            ],
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['id', 'username'], name='idx_id_username'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('email', 'username'), name='unique_constraint_email_username'),
        ),
    ]
